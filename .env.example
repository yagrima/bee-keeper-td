# BeeKeeperTD Environment Variables
# ‚úÖ SECURITY: Copy this file to .env and fill in your values
# NEVER commit .env to git! (already in .gitignore)

# =============================================================================
# SUPABASE CONFIGURATION (Aktuelle Version)
# =============================================================================

# Your Supabase project URL
# Find in: Supabase Dashboard ‚Üí Settings ‚Üí API ‚Üí Configuration ‚Üí Project URL
# Example: https://your-project-id.supabase.co
SUPABASE_URL=https://your-project-id.supabase.co

# Your Supabase anon/public key (Client-side safe)
# Find in: Supabase Dashboard ‚Üí Settings ‚Üí API ‚Üí Project API keys ‚Üí anon public
# Note: This key is safe to use in client-side code (protected by RLS)
# Example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZi...
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# =============================================================================
# SAVE DATA INTEGRITY
# =============================================================================

# HMAC secret for save data integrity validation
# üî¥ CRITICAL: Generate a strong random secret (min 32 characters, recommended 64)
#
# Generate mit einem dieser Befehle:
#   Windows PowerShell:
#     -Join ((65..90) + (97..122) + (48..57) | Get-Random -Count 64 | % {[char]$_})
#
#   Linux/Mac Terminal:
#     openssl rand -hex 32
#
#   Online (nur f√ºr Development!):
#     https://www.random.org/strings/
#
# ‚ö†Ô∏è WICHTIG: Dieser Wert MUSS vor dem ersten Start gesetzt werden!
# ‚ö†Ô∏è NIEMALS diesen Wert √§ndern, nachdem Saves existieren (sonst Checksum-Fehler)!
BKTD_HMAC_SECRET=GENERATE_ME_WITH_OPENSSL_RAND_HEX_32_BEFORE_FIRST_START

# =============================================================================
# DEVELOPMENT SETTINGS (Optional)
# =============================================================================

# Enable debug output in development
# Set to "1" to enable verbose logging
# GODOT_DEBUG=1
# BEEKEEPER_DEBUG=1

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================

# F√ºr lokale Entwicklung:
# 1. Kopiere diese Datei: cp .env.example .env
# 2. Generiere BKTD_HMAC_SECRET: openssl rand -hex 32
# 3. F√ºge den generierten Wert oben ein
# 4. Starte Godot Editor NEU (Environment-Variablen werden beim Start geladen)
#
# F√ºr Netlify/Vercel Deployment:
# 1. Dashboard ‚Üí Site Settings ‚Üí Environment Variables
# 2. F√ºge alle 3 Variablen hinzu (ohne Kommentare)
# 3. Redeploy die Site
#
# F√ºr Supabase Dashboard Zugang:
# - Dashboard: https://supabase.com/dashboard/project/porfficpmtayqccmpsrw
# - API Settings: Settings ‚Üí API
# - Database: Database ‚Üí Tables
#
# Security Checklist vor Production:
# ‚úì SUPABASE_URL verwendet HTTPS (‚úÖ porfficpmtayqccmpsrw.supabase.co)
# ‚úì SUPABASE_ANON_KEY ist aktuell (‚úÖ expires 2040-07-27)
# ‚úì BKTD_HMAC_SECRET ist min 64 Zeichen (üî¥ MUSS GENERIERT WERDEN!)
# ‚úì .env ist in .gitignore (‚úÖ bereits drin)
# ‚úì Keine Leerzeichen um = Zeichen (‚úÖ OK)
# ‚úì DEBUG_ENABLED = false in Enemy.gd und WaveManager.gd (‚úÖ bereits gesetzt)
#
# Verifizierung nach Start:
# - Godot Console sollte zeigen:
#   ‚úÖ HMAC secret loaded from environment (length: 64)
#   ‚úÖ Supabase credentials loaded (URL: https://porfficpmtayqccmps...)
#   ‚úÖ HTTPS verified
#   ‚úÖ SupabaseClient ready (Security Score: 8.8/10)
